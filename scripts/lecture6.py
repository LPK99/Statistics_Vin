# -*- coding: utf-8 -*-
"""Lecture6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11iUsMit254xLsdX1UM2QUXx49AzEh6fK
"""

# vẽ biểu đồ tần suất cho tổng thể có pp chuẩn
import seaborn as sns
from scipy.stats import norm
x = norm.rvs(size=1000,loc=10,scale=1.2)
sns.distplot(x, hist=True, kde=True, color = 'blue',
             hist_kws={'edgecolor':'black'})

# vẽ biểu đồ tần suất cho trung bình mẫu có pp chuẩn
import seaborn as sns
from scipy.stats import norm
import numpy as np
data = []
for i in range(0, 499):
    x = norm.rvs(size=1000,loc=10,scale=1.2)
    data.append(np.mean(x))
sns.distplot(data, hist=True, kde=True, color = 'blue',hist_kws={'edgecolor':'black'})

# vẽ biểu đồ tần suất cho tổng thể có pp mũ
import seaborn as sns
from scipy.stats import expon
x = expon.rvs(size=100,scale= 4)
sns.distplot(x, hist=True, kde=True, color = 'blue',
             hist_kws={'edgecolor':'black'})

# vẽ biểu đồ tần suất cho trung bình mẫu có pp mũ
import seaborn as sns
from scipy.stats import expon
import numpy as np
data = []
for i in range(0, 499):
    x = expon.rvs(size=100,scale=4)
    data.append(np.mean(x))
sns.distplot(data, hist=True, kde=True, color = 'blue',
             hist_kws={'edgecolor':'black'})

# ví dụ minh hoạ 1
from scipy.stats import norm
import numpy as np
mu =12.5
sigma =2.5
x =10.825
norm.cdf(x,mu, sigma)
n=4
norm.cdf(x,mu, sigma/np.sqrt(n))

# ví dụ minh hoạ 2
import numpy as np
from scipy.stats import expon
from scipy.stats import norm
1-expon.cdf(4.5, scale =4)
1-norm.cdf(4.5, 4, 4/np.sqrt(50))
1- norm.cdf(4.5, 4, 4/np.sqrt(500))

# ví dụ minh hoạ 3
import numpy as np
from scipy.stats import norm
1- norm.cdf(0, 2000, np.sqrt(pow(10000,2)/50+pow(9000,2)/60))

# ví dụ minh hoạ 4
from scipy.stats import norm
import numpy as np
p =0.531
n=1000
sigma =p*(1-p)/n
x = 0.5
1 - norm.cdf(x,mu, sigma)

# bài tập 1
from scipy.stats import norm
import numpy as np
mu =800
sigma =40
x =775
norm.cdf(x,mu, sigma)
n1=16
norm.cdf(x,mu, sigma/np.sqrt(n1))
n2=100
norm.cdf(x,mu, sigma/np.sqrt(n2))

# bài tập 2
from scipy.stats import norm
import numpy as np
mu =21.1
sigma =2.6
n=150
x1 =17.85
x2 =25.65
norm.cdf(x2,mu, sigma/np.sqrt(n)) - norm.cdf(x1,mu, sigma/np.sqrt(n)) 
x=25.91
1 - norm.cdf(x,mu, sigma/np.sqrt(n))

# bài tập 3
import numpy as np
from scipy.stats import norm
1 - norm.cdf(5, 32-22, np.sqrt(pow(60,2)/10+pow(70,2)/14))

# bài tập 4
import numpy as np
from scipy.stats import norm
n =1500
p =0.02
nA = 40
x=40/1500
1 - norm.cdf(x,p,np.sqrt(p*(1-p)/n))