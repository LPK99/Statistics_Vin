# -*- coding: utf-8 -*-
"""Lecture10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vyxg6-YGj0Zfj6Zfkt_3rju6eP3uKm2K
"""

import numpy as np
import pandas as pd
from scipy.stats import t
df = pd.read_csv("/content/drive/My Drive/Dataset/DataVidu_lecture10.csv")
df.head()

y = df.values[:,3]
n=len(y)
y=y.reshape((n,1))
print(y)

x = df.values[:,:-1]
x=x.reshape((n,3))
print(x)

# uoc luong he so hoi quy
X=np.concatenate((A,x),axis=1)
A=np.ones(len(y))
A=A.reshape((n,1))
beta_hat = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)
print(beta_hat)

# dự báo bien Y cho thiết bị thứ 2
Xnew=X[1,:]
Xnew = Xnew.reshape(1,len(Xnew))
yhat = Xnew.dot(beta_hat)
print(yhat)

# tính ước lượng của sigma^2
yhat = X.dot(beta_hat)
k=3
sigma2 =(1/(n-k-1))*sum((y-yhat)**2)
print(sigma2)

# kiểm định mô hình HQTT
from scipy.stats import f
k=3
ybar = np.mean(y)
SST = sum((y-ybar)**2)
SSE = sum((y-yhat)**2)
SSR = SST - SSE
MSR = SSR/k
MSE = SSE/(n-k-1)
Fobs = MSR/MSE
print(Fobs)
p = 1-f.cdf(Fobs,k,n-k-1)
print(p)

# kiểm định hệ số beta1
beta_hat1 = beta_hat[1]
sigma2 =(1/(n-k-1))*sum((y-yhat)**2)
C = np.linalg.inv(X.T.dot(X))
C11 = C[1,1]
Tobs = beta_hat1/np.sqrt(sigma2*C11)
print(Tobs)
p1 =2*(1-t.cdf(np.abs(Tobs),n-k-1))
print(p1)

# he so xac dinh cua mo hinh
R2 = 1- SSE/SST
print(R2)
# he so xac dinh đa hieu chinh cua mo hinh
R2adj = 1- (SSE/(n-k-1))/(SST/(n-1))
print(R2adj)